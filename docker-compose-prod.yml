version: "3.8"

services:
  backend:
    image: ghcr.io/ifpebj-ti/gestaotccs-backend:latest
    container_name: gestao-backend
    ports:
      - "${PORT_MACHINE_BACKEND}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=${DEFAULTCONNECTION}
      - JWT_SETTINGS__TOKEN_KEY=${TOKEN_KEY}
      - JWT_SETTINGS__ACCESSTOKEN_EXPIRATION_TIME=${ACCESSTOKEN_EXPIRATION_TIME}
      - MailSettings__Host=${MAILSETTINGS_HOST}
      - MailSettings__Port=${MAILSETTINGS_PORT}
      - MailSettings__Name=${MAILSETTINGS_NAME}
      - MailSettings__EmailId=${MAILSETTINGS_EMAILID}
      - MailSettings__UserName=${MAILSETTINGS_USERNAME}
      - MailSettings__Password=${MAILSETTINGS_PASSWORD}
      - COMBINATION_STRING_FOR_ACCESSCODE=${COMBINATION_STRING_FOR_ACCESSCODE}
      - MINIO_SETTINGS__ENDPOINT=${MINIO_ENDPOINT}
      - MINIO_SETTINGS__DOMAIN=${MINIO_DOMAIN}
      - MINIO_SETTINGS__ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SETTINGS__SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_SETTINGS__BUCKET_NAME=${MINIO_BUCKET_NAME}
      - CORS_SETTINGS__URL_FRONT=${CORS_SETTINGS_URL_FRONT}
      - URL_TEMPO=${URL_TEMPO}
      - URL_LOKI=${URL_LOKI}
    restart: unless-stopped
    networks:
      - front_net
      - back_net
      - observability-net
      - management-net
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: ghcr.io/ifpebj-ti/gestaotccs-frontend:latest
    container_name: gestao-frontend
    ports:
      - "${PORT_MACHINE_FRONTEND}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - front_net
      - management-net

  postgres:
    image: postgres:15
    container_name: gestao-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${PORT_MACHINE_POSTGRES}:5432"
    restart: unless-stopped
    networks:
      - back_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  minio:
    image: minio/minio
    container_name: gestao-minio
    ports:
      - "${PORT_MACHINE_API_MINIO}:9000"
      - "${PORT_MACHINE_WEB_MINIO}:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - MINIO_BROWSER_REDIRECT_URL=${MINIO_REDIRECT}
    command: server /data --console-address ":9001"
    restart: unless-stopped
    networks:
      - back_net
      - observability-net
      - management-net

volumes:
  postgres_data:
  minio_data:

networks:
  front_net:
  back_net:
  observability-net:
    external: true
  management-net:
    external: true
